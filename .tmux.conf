#= Setup ==========================================================================================

# Set prefix to Ctrl-T
unbind C-b
set -g prefix C-t
bind C-t send-prefix

# Enable Undercurl (squiggly lines) and italics support
set -g default-terminal "${TERM}"
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'

# Enable RGB capability
set -sa terminal-overrides ",${TERM}:RGB"

# lower delay time to make tmux responsive
set -sg escape-time 1

# Enable mouse mode
setw -g mouse on

# Enable focus events so vim 'autoread' will work properly
set -g focus-events on

# Reload configuration with <C-t>r
bind r source-file ~/.tmux.conf \; display "Reloaded ~/.tmux.conf."

# Scrollback for days (default is 2000)
set-option -g history-limit 999999999

set-option -g set-titles on
set-option -g set-titles-string "#S"

# Windows/Splits ==================================================================================

# Keybindings -------------------------------------------------------------------------------------

bind c new-window -c "#{pane_current_path}"        # create new window
bind | split-window -h -c "#{pane_current_path}"   # split window horizontally
bind - split-window -v -c "#{pane_current_path}"   # split window vertically

# Colors ------------------------------------------------------------------------------------------

set -g pane-border-style fg=brightgreen,bg=default
set -g pane-active-border-style fg=brightgreen,bg=default

# Numbering ---------------------------------------------------------------------------------------

set  -g base-index 1            # start window numbering at 1 (instead of 0)
setw -g pane-base-index 1       # start pane numbering at 1 (instead of 0)

# Resizing ----------------------------------------------------------------------------------------

bind -r H resize-pane -L 5      # grow the current pane leftwards with <C-t>H
bind -r J resize-pane -D 5      # grow the current pane downwards with <C-t>J
bind -r K resize-pane -U 5      # grow the current pane upwards with <C-t>K
bind -r L resize-pane -R 5      # grow the current pane rightwards with <C-t>L

                                # Any of the above can be repeated easily by holding down Ctrl,
                                # hitting 'b' and then pressing H, J, K, or L repeatedly until the
                                # pane is the desired size.
# Activity Notifications --------------------------------------------------------------------------

setw -g monitor-activity on     # highlight windows that have unseen activity
set -g visual-activity off      # don't show a notification when there is activity in a window

# Reorder Windows ---------------------------------------------------------------------------------

bind -r C-H swap-window -t -1 # move window one position to the left
bind -r C-L swap-window -t +1 # move window one position to the right

# Vim-style pane selection and copy and paste =====================================================

setw -g mode-keys vi

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
if-shell '[ $(echo "$(tmux -V | cut -d" " -f2 | tr -d "[:alpha:]") < 3.0" | bc) -eq 1  ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell '[ $(echo "$(tmux -V | cut -d" " -f2 | tr -d "[:alpha:]") >= 3.0" | bc) -eq 1  ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\' 'select-pane -l'"
bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

#= Status Bar =====================================================================================

bind-key / set status                   # use Prefix-/ to toggle status bar

set -g status-position bottom           # put the status on the top of the screen

set -g status-right-length 100
set -g status-left-length 100
set -g status-interval 1                # update once a second

# Colors ------------------------------------------------------------------------------------------

set -g status-style fg=blue,bg=default

setw -g window-status-style fg=white
setw -g window-status-current-style fg=brightwhite

set -g status-left-style fg=brightwhite,bg=default

set -g message-style fg=black,bg=green
set -g message-command-style fg=black,bg=green

# Content -----------------------------------------------------------------------------------------


session_color="red"
inactive_bg="brightblack"
inactive_fg="white"
active_bg="green"
active_fg="black"
tray_bg="brightblack"
tray_fg="white"
clock_fg="cyan"
alert_fg="red"

set -g status-left "#[fg=$session_color]#[fg=black,bg=$session_color]#[bold] #S #[fg=$session_color,bg=default] "
set -g status-right "#[fg=$tray_bg]#[bg=$tray_bg]  #{battery_status_fg}#{battery_graph} #{battery_percentage}#[fg=$tray_fg]  #[fg=$clock_fg,bold]%H#[blink]:#[noblink]%M  #[bg=default,fg=$tray_bg]"

setw -g window-status-current-format "#[fg=$active_bg]#[bg=$active_bg,fg=$active_fg,bold] #I #[fg=$active_bg,bg=default]"
setw -g window-status-format "#[fg=$inactive_bg]#[fg=$inactive_fg,bg=$inactive_bg] #I#{?window_activity_flag,#[fg=$alert_fg]#[blink],#[fg=$inactive_bg]}°#[noblink]#[fg=$inactive_bg,bg=default]#[fg=default]"

setw -g window-status-activity-style "none"

run-shell ~/.config/tmux/battery.sh
